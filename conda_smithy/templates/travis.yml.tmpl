# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-
{%- set platformset = [] %}
{%- for _, platform, _ in configs %}
  {%- set pfarchless = platform.split('-')[0] %}
  {%- if pfarchless not in platformset %}
    {%- do platformset.append(pfarchless) %}
  {%- endif %}
{%- endfor %}
language: generic

{% if travis.secure -%}
env:
  global:
    {%- for name, hashed_secure in travis.secure | dictsort %}
    # The {{ name }} secure variable. This is defined canonically in conda-forge.yml.
    - secure: "{{ hashed_secure }}"
    {%- endfor %}
{%- endif %}

{% if configs[0] -%}
matrix:
  include:
    {%- for config, platform, upload in configs | sort %}
    - env: CONFIG={{ config }} UPLOAD_PACKAGES={{ upload }}
    {%- if platform.startswith("osx") %}
      os: osx
      osx_image: xcode9.4
    {%- elif platform.startswith("linux-ppc64le") %}
      os: linux-ppc64le
    {%- endif %}

    {%- endfor %}
{%- endif %}

before_install:
{%- if 'linux' in platformset %}
    - |
      echo ""
      echo "Maybe install python for $TRAVIS_OS_NAME"  
      if [[ "$TRAVIS_OS_NAME" == "linux.*" ]]; then
        sudo apt install python3-pip
        sudo pip install --upgrade pip
        sudo pip install setuptools shyaml
      fi
{%- endif %}

    # Fast finish the PR.
    - {{ fast_finish }}

{%- if 'osx' in platformset %}
    # Remove homebrew in osx
    - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        echo ""
        echo "Removing homebrew from Travis CI to avoid conflicts."
        curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall > ~/uninstall_homebrew
        chmod +x ~/uninstall_homebrew
        ~/uninstall_homebrew -fq
        rm ~/uninstall_homebrew
      fi
{%- endif %}

install:
    {%- if 'osx' in platformset %}
    # Install Miniconda.
    - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        echo ""
        echo "Installing a fresh version of Miniconda."
        MINICONDA_URL="https://repo.continuum.io/miniconda"
        MINICONDA_FILE="Miniconda3-latest-MacOSX-x86_64.sh"
        curl -L -O "${MINICONDA_URL}/${MINICONDA_FILE}"
        bash $MINICONDA_FILE -b
      fi

    # Configure conda.
    - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        echo ""
        echo "Configuring conda."
        source /Users/travis/miniconda3/bin/activate root

        conda install -n root -c conda-forge --quiet --yes conda-forge-ci-setup=2 conda-build
        setup_conda_rc ./ ./{{ recipe_dir }} ./.ci_support/${CONFIG}.yaml

        {% if build_setup -%}
        {{ build_setup }}{% endif %}
      fi

    # compiler cleanup
    - |
      if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        mangle_compiler ./ ./{{ recipe_dir }} ./.ci_support/${CONFIG}.yaml
      fi
    {%- endif %}

script:
{%- if 'osx' in platformset %}
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      # generate the build number clobber
      make_build_number ./ ./{{ recipe_dir }} ./.ci_support/${CONFIG}.yaml
      {% if idle_timeout_minutes %}travis_wait {{ idle_timeout_minutes }}{% endif %} conda build ./{{ recipe_dir }} -m ./.ci_support/${CONFIG}.yaml --clobber-file ./.ci_support/clobber_${CONFIG}.yaml
      
      if [[ "${UPLOAD_PACKAGES}" != "False" ]]; then
        upload_package ./ ./{{ recipe_dir }} ./.ci_support/${CONFIG}.yaml
      fi
    fi
{%- endif %}

  # TODO make this check better 
{% if 'linux' in platformset %}
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux.*" ]]; then
      ./.travis/run_docker_build.sh
    fi
{%- endif %}
