
{% set conda_vars = {'python': ' CONDA_PY', 'numpy': 'CONDA_NPY'} %}

{% macro matrix_env(matrix_item) -%}
    {% for dep_name, version in matrix_item %}{{ conda_vars.get(dep_name, dep_name) }}={{version}}  {% endfor %}
{%- endmacro %}

language: objective-c

{% block env %}
{% if matrix[0] or travis.secure %}
env:

{% if matrix[0] %}
  matrix:
    {% for case in matrix %}
    - {{- matrix_env(case) }}
    {% endfor %}
{% endif %}

{% if travis.secure %}
  global:
{% for name, hashed_secure in travis.secure.items() %}
    # The {{ name }} secure variable. This is defined canonically in forge.yml.
    - secure: "{{ hashed_secure }}"
{% endfor %}
{% endif %}
{% endif %}
{% endblock %}

install:
    - |
      MINICONDA_URL="http://repo.continuum.io/miniconda"
      MINICONDA_FILE="Miniconda3-3.7.3-MacOSX-x86_64.sh"
      wget "${MINICONDA_URL}/${MINICONDA_FILE}"
      bash $MINICONDA_FILE -b

      export PATH=/Users/travis/miniconda3/bin:$PATH

      conda update --yes conda
      conda install --yes conda-build jinja2 anaconda-client

      {% for channel in channels.get('sources', []) %}
      conda config --add channels {{ channel }}
      {% endfor %}

script:
  - conda build ./{{ recipe_dir }}

after_success:
  - ./ci_support/upload_or_check_non_existence.py ./{{ recipe_dir }} {{ channels['target'] }} --channel=main
