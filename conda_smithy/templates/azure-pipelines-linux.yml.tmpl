# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: linux
  pool:
  {%- for spec in azure.pool_linux %}
    {%- if azure.pool_linux[spec] is string %}
    {{ spec }}: {{ azure.pool_linux[spec] }}
    {%- else %}
    {{ spec }}:
    {%- for item in azure.pool_linux[spec] %}
    - {{ item }}
    {%- endfor %}
    {%- endif %}
  {%- endfor %}
  {%- if azure.workspace is defined %}
  workspace:
    clean: {{ azure.workspace.clean }}
  {%- endif %}
  timeoutInMinutes: {{ azure.timeout_minutes }}
  strategy:
    maxParallel: {{ azure.strategy.maxParallel }}
    matrix:
    {%- for data in configs %}
    {%- if data.platform.startswith('linux') %}
      {{ data.config_name }}:
        CONFIG: {{ data.config_name }}
        UPLOAD_PACKAGES: {{ data.upload }}
        DOCKER_IMAGE: {{ data.config["docker_image"][-1] }}
    {%- endif %}
    {%- endfor %}
  steps:
  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))
    displayName: Configure binfmt_misc

  - script: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
{%- if upload_on_branch %}
        export UPLOAD_ON_BRANCH="{{ upload_on_branch }}"
{%- endif %}
{%- if docker.run_args is defined %}
        export CONDA_FORGE_DOCKER_RUN_ARGS="{{ docker.run_args }}"
{%- endif %}
        .scripts/run_docker_build.sh
    displayName: Run docker build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
{%- if conda_forge_output_validation %}
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
{%- endif %}
