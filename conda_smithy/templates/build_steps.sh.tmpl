#!/usr/bin/env bash

# PLEASE NOTE: This script has been automatically generated by conda-smithy. Any changes here
# will be lost next time ``conda smithy rerender`` is run. If you would like to make permanent
# changes to this script, consider a proposal to conda-smithy so that other feedstocks can also
# benefit from the improvement.

set -xeuo pipefail
export FEEDSTOCK_ROOT="${FEEDSTOCK_ROOT:-/home/conda/feedstock_root}"
source ${FEEDSTOCK_ROOT}/.scripts/logging_utils.sh

{# This closes the matching `startgroup` on `run_docker_build.sh` #}
( { set +x; endgroup "Start Docker"; } 2> /dev/null )

( { set +x; startgroup "Configuring conda"; } 2> /dev/null )

export PYTHONUNBUFFERED=1
export RECIPE_ROOT="${RECIPE_ROOT:-/home/conda/recipe_root}"
export CI_SUPPORT="${FEEDSTOCK_ROOT}/.ci_support"
export CONFIG_FILE="${CI_SUPPORT}/${CONFIG}.yaml"

cat >~/.condarc <<CONDARC

conda-build:
 root-dir: ${FEEDSTOCK_ROOT}/build_artifacts

CONDARC

{%- if build_with_mambabuild %}
GET_BOA=boa
BUILD_CMD=mambabuild
{%- else %}
BUILD_CMD=build
{%- endif %}

conda install --yes --quiet "{{ remote_ci_setup }}" conda-build pip ${GET_BOA:-} -c conda-forge
{% if local_ci_setup %}
conda uninstall --quiet --yes --force "{{ remote_ci_setup }}"
pip install --no-deps ${RECIPE_ROOT}/.
{%- endif %}
# set up the condarc
setup_conda_rc "${FEEDSTOCK_ROOT}" "${RECIPE_ROOT}" "${CONFIG_FILE}"

{% if build_setup -%}
{{ build_setup }}{% endif -%}
{% if yum_build_setup is defined -%}
{{ yum_build_setup }}{% endif -%}

# make the build number clobber
make_build_number "${FEEDSTOCK_ROOT}" "${RECIPE_ROOT}" "${CONFIG_FILE}"
{% if test_on_native_only %}
if [[ "${HOST_PLATFORM}" != "${BUILD_PLATFORM}" ]] && [[ "${BUILD_WITH_CONDA_DEBUG:-0}" != 1 ]]; then
     EXTRA_CB_OPTIONS="${EXTRA_CB_OPTIONS:-} --no-test"
fi
{% endif %}

( { set +x; endgroup "Configuring conda"; } 2> /dev/null )

( { set +x; startgroup "Running conda commands"; } 2> /dev/null )

if [[ "${BUILD_WITH_CONDA_DEBUG:-0}" == 1 ]]; then
    if [[ "x${BUILD_OUTPUT_ID:-}" != "x" ]]; then
        EXTRA_CB_OPTIONS="${EXTRA_CB_OPTIONS:-} --output-id ${BUILD_OUTPUT_ID}"
    fi
    conda debug "${RECIPE_ROOT}" -m "${CI_SUPPORT}/${CONFIG}.yaml" \
        ${EXTRA_CB_OPTIONS:-} \
        --clobber-file "${CI_SUPPORT}/clobber_${CONFIG}.yaml"

    ( { set +x; endgroup "Running conda commands"; } 2> /dev/null )

    # Drop into an interactive shell
    /bin/bash
else
    conda $BUILD_CMD "${RECIPE_ROOT}" -m "${CI_SUPPORT}/${CONFIG}.yaml" \
        --suppress-variables ${EXTRA_CB_OPTIONS:-} \
        --clobber-file "${CI_SUPPORT}/clobber_${CONFIG}.yaml"

    ( { set +x; endgroup "Running conda commands"; } 2> /dev/null )

    {%- if conda_forge_output_validation %}
    ( { set +x; startgroup "Validating outputs"; } 2> /dev/null )

    validate_recipe_outputs "${FEEDSTOCK_NAME}"

    ( { set +x; endgroup "Validating outputs"; } 2> /dev/null )
    {%- endif %}

    {%- if build_with_mambabuild %}
    # we are building with mambabuild, so exit with an error code for now
    exit 1
    {%- endif %}

    ( { set +x; startgroup "Uploading packages"; } 2> /dev/null )

    if [[ "${UPLOAD_PACKAGES}" != "False" ]]; then
        upload_package {% if conda_forge_output_validation %}--validate --feedstock-name="${FEEDSTOCK_NAME}" {% endif %}{% if private_upload %} --private{% endif %} "${FEEDSTOCK_ROOT}" "${RECIPE_ROOT}" "${CONFIG_FILE}"
    fi

    ( { set +x; endgroup "Uploading packages"; } 2> /dev/null )
fi

( { set +x; startgroup "Final checks"; } 2> /dev/null )

touch "${FEEDSTOCK_ROOT}/build_artifacts/conda-forge-build-done-${CONFIG}"
