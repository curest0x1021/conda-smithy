#!/usr/bin/env bash

source .scripts/logging_utils.sh

set -x

{ set +x; startgroup "Installing a fresh version of Miniforge" } 2> /dev/null

MINIFORGE_URL="https://github.com/conda-forge/miniforge/releases/latest/download"
MINIFORGE_FILE="Miniforge3-MacOSX-x86_64.sh"
curl -L -O "${MINIFORGE_URL}/${MINIFORGE_FILE}"
bash $MINIFORGE_FILE -b

{ set +x; endgroup "Installing a fresh version of Miniforge" } 2> /dev/null

{ set +x; startgroup "Configuring conda" } 2> /dev/null

{% if build_with_mambabuild -%}
GET_BOA=boa
BUILD_CMD=mambabuild
{%- else -%}
BUILD_CMD=build
{%- endif %}

source ${HOME}/miniforge3/etc/profile.d/conda.sh
conda activate base

echo -e "\n\nInstalling {{ remote_ci_setup }} and conda-build."
conda install -n base --quiet --yes "{{ remote_ci_setup }}" conda-build pip ${GET_BOA:-}

{% if local_ci_setup %}
conda uninstall --quiet --yes --force "{{ remote_ci_setup }}"
pip install --no-deps {{ recipe_dir }}/.
{%- endif %}

echo -e "\n\nSetting up the condarc and mangling the compiler."
setup_conda_rc ./ ./{{ recipe_dir }} ./.ci_support/${CONFIG}.yaml
mangle_compiler ./ ./{{ recipe_dir }} .ci_support/${CONFIG}.yaml

echo -e "\n\nMangling homebrew in the CI to avoid conflicts."
/usr/bin/sudo mangle_homebrew
/usr/bin/sudo -k

{% if build_setup -%}
echo -e "\n\nRunning the build setup script."
{{ build_setup }}
{%- endif %}

{ set +x; endgroup "Configuring conda" } 2> /dev/null

set -e

{ set +x; startgroup "Running conda $BUILD_CMD" } 2> /dev/null

echo -e "\n\nMaking the build clobber file"
make_build_number ./ ./{{ recipe_dir }} ./.ci_support/${CONFIG}.yaml
{% if test_on_native_only %}
if [[ "${HOST_PLATFORM}" != "${BUILD_PLATFORM}" ]]; then
    EXTRA_CB_OPTIONS="${EXTRA_CB_OPTIONS:-} --no-test"
fi
{% endif %}
conda $BUILD_CMD ./{{ recipe_dir }} -m ./.ci_support/${CONFIG}.yaml --suppress-variables --clobber-file ./.ci_support/clobber_${CONFIG}.yaml ${EXTRA_CB_OPTIONS:-}

{ set +x; endgroup "Running conda $BUILD_CMD" } 2> /dev/null

{%- if conda_forge_output_validation %}
{ set +x; startgroup "Validating outputs" } 2> /dev/null

validate_recipe_outputs "${FEEDSTOCK_NAME}"

{ set +x; endgroup "Validating outputs" } 2> /dev/null
{%- endif %}
{% if build_with_mambabuild -%}
# we're building with mambabuild, so fail here and DO NOT UPLOAD packages
exit 1
{%- else %}
{ set +x; startgroup "Uploading packages" } 2> /dev/null

if [[ "${UPLOAD_PACKAGES}" != "False" ]]; then
  upload_package {% if conda_forge_output_validation %}--validate --feedstock-name="${FEEDSTOCK_NAME}"{% endif %}{% if private_upload %} --private{% endif %} ./ ./{{ recipe_dir }} ./.ci_support/${CONFIG}.yaml
fi

{ set +x; endgroup "Uploading packages" } 2> /dev/null
{%- endif %}